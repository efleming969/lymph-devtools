"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const FS = require("fs-extra");
const Path = require("path");
const Glob = require("globby");
const PostCSS = require("postcss");
exports.stream = function (style) {
    const post_css_config = { from: style.input, to: style.output };
    return FS.readFile(style.input, "utf8")
        .then(css => PostCSS([]).process(css, post_css_config))
        .then(result => result.css);
};
exports.process = function (style) {
    const post_css_config = { from: style.input, to: style.output };
    const target_dir = Path.dirname(style.output);
    return FS.ensureDir(target_dir)
        .then(() => FS.readFile(style.input, "utf8"))
        .then(css => PostCSS([]).process(css, post_css_config))
        .then(result => FS.writeFile(style.output, result.css));
};
exports.compile = function (styles) {
    return Promise.all(styles.map(exports.process)).then(() => styles);
};
exports.detect = function (source, target) {
    const css_file_pattern = Path.join(source, "**", "*.css");
    return Glob(css_file_pattern).then(files => files.map(function (f) {
        const name = Path.basename(f, ".css");
        const input = f;
        const output = Path.join(target, "styles", name + ".css");
        return { name, input, output };
    }));
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3R5bGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiU3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQThCO0FBQzlCLDZCQUE0QjtBQUM1QiwrQkFBOEI7QUFDOUIsbUNBQWtDO0FBUXJCLFFBQUEsTUFBTSxHQUFHLFVBQVcsS0FBWTtJQUN6QyxNQUFNLGVBQWUsR0FBRyxFQUFFLElBQUksRUFBRSxLQUFLLENBQUMsS0FBSyxFQUFFLEVBQUUsRUFBRSxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUE7SUFFL0QsTUFBTSxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUUsS0FBSyxDQUFDLEtBQUssRUFBRSxNQUFNLENBQUU7U0FDcEMsSUFBSSxDQUFFLEdBQUcsQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFFLEVBQUUsQ0FBRSxDQUFDLE9BQU8sQ0FBRSxHQUFHLEVBQUUsZUFBZSxDQUFFLENBQUU7U0FDNUQsSUFBSSxDQUFFLE1BQU0sQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBRSxDQUFBO0FBQ3JDLENBQUMsQ0FBQTtBQUVZLFFBQUEsT0FBTyxHQUFHLFVBQVcsS0FBWTtJQUMxQyxNQUFNLGVBQWUsR0FBRyxFQUFFLElBQUksRUFBRSxLQUFLLENBQUMsS0FBSyxFQUFFLEVBQUUsRUFBRSxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUE7SUFDL0QsTUFBTSxVQUFVLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBRSxLQUFLLENBQUMsTUFBTSxDQUFFLENBQUE7SUFFL0MsTUFBTSxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQUUsVUFBVSxDQUFFO1NBQzVCLElBQUksQ0FBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFFLEtBQUssQ0FBQyxLQUFLLEVBQUUsTUFBTSxDQUFFLENBQUU7U0FDaEQsSUFBSSxDQUFFLEdBQUcsQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFFLEVBQUUsQ0FBRSxDQUFDLE9BQU8sQ0FBRSxHQUFHLEVBQUUsZUFBZSxDQUFFLENBQUU7U0FDNUQsSUFBSSxDQUFFLE1BQU0sQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBRSxLQUFLLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxHQUFHLENBQUUsQ0FBRSxDQUFBO0FBQ25FLENBQUMsQ0FBQTtBQUVZLFFBQUEsT0FBTyxHQUFHLFVBQVcsTUFBTTtJQUNwQyxNQUFNLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBRSxNQUFNLENBQUMsR0FBRyxDQUFFLGVBQU8sQ0FBRSxDQUFFLENBQUMsSUFBSSxDQUFFLEdBQUcsRUFBRSxDQUFDLE1BQU0sQ0FBRSxDQUFBO0FBQ3BFLENBQUMsQ0FBQTtBQUVZLFFBQUEsTUFBTSxHQUFHLFVBQVcsTUFBYyxFQUFFLE1BQWM7SUFDM0QsTUFBTSxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsT0FBTyxDQUFFLENBQUE7SUFFM0QsTUFBTSxDQUFDLElBQUksQ0FBRSxnQkFBZ0IsQ0FBRSxDQUFDLElBQUksQ0FBRSxLQUFLLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUUsVUFBVyxDQUFDO1FBQ2xFLE1BQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUUsQ0FBQyxFQUFFLE1BQU0sQ0FBRSxDQUFBO1FBQ3ZDLE1BQU0sS0FBSyxHQUFHLENBQUMsQ0FBQTtRQUNmLE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxJQUFJLEdBQUcsTUFBTSxDQUFFLENBQUE7UUFDM0QsTUFBTSxDQUFDLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsQ0FBQTtJQUNsQyxDQUFDLENBQUUsQ0FBRSxDQUFBO0FBQ1QsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgRlMgZnJvbSBcImZzLWV4dHJhXCJcbmltcG9ydCAqIGFzIFBhdGggZnJvbSBcInBhdGhcIlxuaW1wb3J0ICogYXMgR2xvYiBmcm9tIFwiZ2xvYmJ5XCJcbmltcG9ydCAqIGFzIFBvc3RDU1MgZnJvbSBcInBvc3Rjc3NcIlxuXG5leHBvcnQgdHlwZSBTdHlsZSA9IHtcbiAgICBuYW1lOiBzdHJpbmcsXG4gICAgaW5wdXQ6IHN0cmluZyxcbiAgICBvdXRwdXQ6IHN0cmluZ1xufVxuXG5leHBvcnQgY29uc3Qgc3RyZWFtID0gZnVuY3Rpb24gKCBzdHlsZTogU3R5bGUgKSB7XG4gICAgY29uc3QgcG9zdF9jc3NfY29uZmlnID0geyBmcm9tOiBzdHlsZS5pbnB1dCwgdG86IHN0eWxlLm91dHB1dCB9XG5cbiAgICByZXR1cm4gRlMucmVhZEZpbGUoIHN0eWxlLmlucHV0LCBcInV0ZjhcIiApXG4gICAgICAgIC50aGVuKCBjc3MgPT4gUG9zdENTUyggW10gKS5wcm9jZXNzKCBjc3MsIHBvc3RfY3NzX2NvbmZpZyApIClcbiAgICAgICAgLnRoZW4oIHJlc3VsdCA9PiByZXN1bHQuY3NzIClcbn1cblxuZXhwb3J0IGNvbnN0IHByb2Nlc3MgPSBmdW5jdGlvbiAoIHN0eWxlOiBTdHlsZSApIHtcbiAgICBjb25zdCBwb3N0X2Nzc19jb25maWcgPSB7IGZyb206IHN0eWxlLmlucHV0LCB0bzogc3R5bGUub3V0cHV0IH1cbiAgICBjb25zdCB0YXJnZXRfZGlyID0gUGF0aC5kaXJuYW1lKCBzdHlsZS5vdXRwdXQgKVxuXG4gICAgcmV0dXJuIEZTLmVuc3VyZURpciggdGFyZ2V0X2RpciApXG4gICAgICAgIC50aGVuKCAoKSA9PiBGUy5yZWFkRmlsZSggc3R5bGUuaW5wdXQsIFwidXRmOFwiICkgKVxuICAgICAgICAudGhlbiggY3NzID0+IFBvc3RDU1MoIFtdICkucHJvY2VzcyggY3NzLCBwb3N0X2Nzc19jb25maWcgKSApXG4gICAgICAgIC50aGVuKCByZXN1bHQgPT4gRlMud3JpdGVGaWxlKCBzdHlsZS5vdXRwdXQsIHJlc3VsdC5jc3MgKSApXG59XG5cbmV4cG9ydCBjb25zdCBjb21waWxlID0gZnVuY3Rpb24gKCBzdHlsZXMgKSB7XG4gICAgcmV0dXJuIFByb21pc2UuYWxsKCBzdHlsZXMubWFwKCBwcm9jZXNzICkgKS50aGVuKCAoKSA9PiBzdHlsZXMgKVxufVxuXG5leHBvcnQgY29uc3QgZGV0ZWN0ID0gZnVuY3Rpb24gKCBzb3VyY2U6IHN0cmluZywgdGFyZ2V0OiBzdHJpbmcgKSB7XG4gICAgY29uc3QgY3NzX2ZpbGVfcGF0dGVybiA9IFBhdGguam9pbiggc291cmNlLCBcIioqXCIsIFwiKi5jc3NcIiApXG5cbiAgICByZXR1cm4gR2xvYiggY3NzX2ZpbGVfcGF0dGVybiApLnRoZW4oIGZpbGVzID0+IGZpbGVzLm1hcCggZnVuY3Rpb24gKCBmICkge1xuICAgICAgICBjb25zdCBuYW1lID0gUGF0aC5iYXNlbmFtZSggZiwgXCIuY3NzXCIgKVxuICAgICAgICBjb25zdCBpbnB1dCA9IGZcbiAgICAgICAgY29uc3Qgb3V0cHV0ID0gUGF0aC5qb2luKCB0YXJnZXQsIFwic3R5bGVzXCIsIG5hbWUgKyBcIi5jc3NcIiApXG4gICAgICAgIHJldHVybiB7IG5hbWUsIGlucHV0LCBvdXRwdXQgfVxuICAgIH0gKSApXG59XG4iXX0=